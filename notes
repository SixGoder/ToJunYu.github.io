<p>我的猫咪脾气火爆</p>
<p> 开始标签  </p> 结束标签
第一行代码整体称作为 元素*****而“我的猫咪脾气火爆”则作为 内容

<em>刀枪剑戟 斧钺钩叉</em>
输出内容的相应斜体

自由性极高的嵌套
<p>我的猫咪脾气火<strong>爆</strong>:)</p>
如果进行了错误的操作，浏览器会进行猜测，可能输出错误的东西

块级元素和内联元素
<em>第一</em><em>第二</em><em>第三</em>
输出——> 斜体的 “第一第二第三”
<p>第四</p><p>第五</p><p>第六</p>
输出——> 
第四
第五
第六
<em>是一个内联元素，不会导致换行和间隙
<p>是一个块级元素，导致换行输出

空元素
不是所有元素都拥有开始标签，内容，结束标签。一些元素只有一个标签，通常用来在此元素所在位置插入/嵌入一些东西。
<img src="https://raw.githubusercontent.com/mdn/beginner-html-site/gh-pages/images/firefox-icon.png">
元素<img>是用来在元素<img>所在位置插入一张指定的图片。

属性
属性包含元素的额外信息，这些信息不会出现在实际的内容中。
<p class="editor-note">我的猫咪脾气火爆：）</p>
这个class属性给元素赋了一个识别的名字（id），这个名字此后可以被用来识别此元素的样式信息和其他信息。

一个属性必须包含如下内容：
一个空格，在属性和元素名称之间。(如果已经有一个或多个属性，就与前一个属性之间有一个空格。)
属性名称，后面跟着一个等于号。
一个属性值，由一对引号“ ”引起来。

另一个例子是关于元素<a>的——元素<a>是锚，它使被标签包裹的内容成为一个超链接。
此元素也可以添加大量的属性，其中几个如下：
href: 这个属性声明超链接的web地址，当这个链接被点击浏览器会跳转至href声明的web地址。
例如：href="https://www.mozilla.org/"。
title: 标题title属性为超链接声明额外的信息，比如你将链接至的那个页面。
例如：title="The Mozilla homepage"。
当鼠标悬停在超链接上面时，这部分信息将以工具提示的形式显示。
target: 目标target属性用于指定链接如何呈现出来。
例如，target="_blank"将在新标签页中显示链接。如果你希望在当前标签页显示链接，忽略这个属性即可。

布尔属性
有时你会看到没有值的属性，它是合法的。
这些属性被称为布尔属性，他们只能有跟它的属性名一样的属性值。
<!-- 使用disabled属性来防止终端用户输入文本到输入框中 -->
<input type="text" disabled>
<!-- 下面这个输入框没有disabled属性，所以用户可以向其中输入 -->
<input type="text">

<!DOCTYPE html>是最短的有效的文档声明。
<html></html>: <html>元素。
这个元素包裹了整个完整的页面，是一个根元素。
<head></head>: <head>元素. 
这个元素是一个容器，它包含了所有你想包含在HTML页面中但不想在HTML页面中显示的内容。
这些内容包括你想在搜索结果中出现的关键字和页面描述，CSS样式，字符集声明等等。
<meta charset="utf-8">: 这个元素设置文档使用utf-8字符集编码，utf-8字符集包含了人类大部分的文字。
基本上他能识别你放上去的所有文本内容。毫无疑问要使用它，并且它能在以后避免很多其他问题。
<title></title>: 设置页面标题，出现在浏览器标签上，当你标记/收藏页面时它可用来描述页面。
<body></body>: <body>元素。
包含了你访问页面时所有显示在页面上的内容，文本，图片，音频，游戏等等。
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>我的测试站点</title>
  </head>
  <body>
    <p>这是我的页面</p>
  </body>
</html>

在我们的HTML代码中，我们让每一个嵌套的元素以两个空格缩进。 
你使用什么风格来格式化你的代码取决于你 (比如所对于每层缩进使用多少个空格),但是你应该坚持使用某种风格。

HTML注释
注释是被浏览器忽略的，而且是对用户不可见的。
它们的目的是允许你描述你的代码是如何工作的和不同部分的代码做了什么等等。
为了将一段HTML中的内容置为注释，你需要将其用特殊的记号<!--和-->包括起来：
<p>我在注释外！</p>
<!-- <p>我在注释内！</p> -->

HTML 头部是包含在 <head> 元素里面的内容。
不像 <body> 元素的内容会显示在浏览器中，head 里面的内容不会在浏览器中显示，它的作用是包含一些页面的元数据。

增加一个标题
我们之前已经了解过 <title>，它可以用来给 html 文档添加一个标题。
你可能会将它和给 body 添加标题的 <h1> 元素混淆，有些时候 h1 也会被称作网页标题。
当被加载到浏览器中的时候，元素 <h1>  会出现在页面中 —— 通常它应该在一个页面中只被使用一次。
它被用来标记你的页面内容的标题（故事的标题，新闻标题或者任何适当的方式）。
元素 <title> 是用来表示整个HTML文档标题的元数据（不是文档的内容）

元数据：<meta>元素
元数据就是描述数据的数据，而HTML有一个“官方的”方式来为一个文档添加元数据——  <meta> 元素。
有很多不同种类的 <meta> 元素可以被包含进你的页面的<head>元素。
但是现在我们还不会尝试去解释所有类型，这只会引起混乱。

添加作者和描述
许多<meta> 元素包含了name 和 content 特性：
name 指定了meta 元素的类型； 说明该元素包含了什么类型的信息。
content 指定了实际的元数据内容。

在你的站点增加自定义图标
为了进一步丰富你的网站设计，你可以在元数据中添加对自定义图标的引用。
这些将在特定的场合中显示。
这个不起眼的图标已经存在很多很多年了，16 x 16 像素是这种图标的第一种类型。
你可以看见这些图标出现在浏览器每一个打开的页面中的标签页中中以及在书签面板中的书签页面中。
页面添加图标的方式有：
将其保存在与网站的索引页面相同的目录中，以.ico格式保存（大多数浏览器将支持更通用的格式。
如.gif或.png。
但使用ICO格式将确保它能在如Internet Explorer 6一样久远的浏览器显示）
将以下行添加到HTML <head>中以引用它：
<link rel="shortcut icon" href="favicon.ico" type="image/x-icon">

在HTML中应用CSS和JavaScript
如今，几乎你使用的所有网站都会使用 CSS 让网页更加炫酷。
使用JavaScript让网页有交互功能，比如视频播放器，地图，游戏以及更多功能。
这些应用在网页中很常见，它们分别使用 <link>元素以及 <script> 元素。
<link> 元素经常位于文档的头部。
这个link元素有2个属性，rel="stylesheet"表明这是文档的样式表，而 href包含了样式表文件的路径：
<link rel="stylesheet" href="my-css-file.css">
<script> 部分没必要非要放在文档头部；
实际上，把它放在文档的尾部（在 </body>标签之前）是一个更好的选择。
这样可以确保在加载脚本之前浏览器已经解析了HTML内容（如果脚本加载某个不存在的元素，浏览器会报错）。
<script src="my-js-file.js"></script>
<script>元素看起来像一个空元素，但它并不是，因此需要一个结束标记。
您还可以选择将脚本放入<script>元素中，而不是指向外部脚本文件。
 
为文档设定主语言
值得一提的是你可以（而且确实应该）为你的站点设定语言。
这个可以通过添加lang属性到HTML开始标签中来实现 (参考 meta-example.html)，如下所示：
<html lang="en-US">
en-US 英国(美国)
zh-CN 中文(简体，中国大陆)
zh-SG 中文(简体，新加坡)
zh-HK 中文(繁体，香港)
zh-MO 中文(繁体，澳门)
zh-TW 中文(繁体，台湾)
在很多方面都很有用。
如果你的HTML文档的语言设置好了，那么你的HTML文档就会被搜索引擎更有效地索引 
(例如，允许它在特定于语言的结果中正确显示)。
对于那些使用屏幕阅读器的视障人士也很有用(比如， 法语和英语中都有“six”这个单词，但是发音却完全不同)。
你还可以将文档的分段设置为不同的语言。例如，我们可以把日语部分设置为日语，如下所示：
<p>Japanese example: <span lang="jp">ご飯が熱い。</span>.</p>
